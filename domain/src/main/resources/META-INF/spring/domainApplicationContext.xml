<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/lang
        http://www.springframework.org/schema/lang/spring-lang-3.0.xsd">

							    
    <bean id="appSettings" class="org.openhds.domain.model.AppSettings" scope="prototype">
    	<property name="versionNumber"><value>${openhdsVersion}</value></property>
    </bean>
    
    <bean id="appContextAware" class="org.openhds.domain.constraint.AppContextAware" /> 
    <bean id="valueConstraintService" class="org.openhds.domain.service.impl.ValueConstraintServiceImpl" />
    
	<bean id="calendarUtil" class="org.openhds.domain.util.CalendarUtil">
		<property name="siteProperties" ref="siteProperties" />
	</bean>
	
	<!-- CXF instantiates CalendarAdapter on demand during (un)marshaling so its outside the scope of Springs context  -->
	<!-- This is a hack so that the adapter is able to be injected with the calendarUtil bean -->
	<bean id="calendarAdapter" class="org.openhds.domain.util.CalendarAdapter">
		<property name="calendarUtil" ref="calendarUtil" />
	</bean>
</beans>